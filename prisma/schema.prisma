// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model User {
    id        String   @id @default(cuid())
    name      String
    email     String   @unique
    password  String
    isAdmin   Boolean  @default(false)
    answers   Answer[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Question {
    id            String         @id @default(cuid())
    text          String
    createdAt     DateTime       @default(now())
    updatedAt     DateTime       @updatedAt
    deletedAt     DateTime?
    answerOptions AnswerOption[]
    answers       Answer[]
    FormQuestion  FormQuestion[]
}

model AnswerOption {
    id        String     @id @default(cuid())
    value     String
    label     String
    questions Question[]
    answers   Answer[]
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
    deletedAt DateTime?
}

model Form {
    id          String    @id @default(cuid())
    title       String
    description String?
    isActive    Boolean   @default(true)
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    deletedAt   DateTime?

    // Relações
    questions FormQuestion[]
    answers   Answer[]
}

model FormQuestion {
    id         String    @id @default(cuid())
    formId     String
    questionId String
    order      Int
    createdAt  DateTime  @default(now())
    updatedAt  DateTime  @updatedAt
    deletedAt  DateTime?

    // Relações
    form     Form     @relation(fields: [formId], references: [id])
    question Question @relation(fields: [questionId], references: [id])
    answers  Answer[]

    @@unique([formId, questionId])
}

model Answer {
    id             String    @id @default(cuid())
    userId         String
    formId         String
    questionId     String
    answerOptionId String
    createdAt      DateTime  @default(now())
    updatedAt      DateTime  @updatedAt
    deletedAt      DateTime?

    // Relações
    user           User          @relation(fields: [userId], references: [id])
    form           Form          @relation(fields: [formId], references: [id])
    question       Question      @relation(fields: [questionId], references: [id])
    answerOption   AnswerOption  @relation(fields: [answerOptionId], references: [id])
    FormQuestion   FormQuestion? @relation(fields: [formQuestionId], references: [id])
    formQuestionId String?
}
